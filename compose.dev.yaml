services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./web
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./web/package.json
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file: "./backend/.env"
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /usr/src/app
          ignore:
            - out/
  valkey:
    image: valkey/valkey:7.2.5-alpine
    restart: unless-stopped

  postgres:
    image: postgres:16.3
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: toronto_wild
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
